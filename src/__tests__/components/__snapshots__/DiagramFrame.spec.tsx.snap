// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<DiagramFrame /> default loading 1`] = `
"<Layout hasAside={true} height=\\"100%\\">
  <Styled(Aside) width=\\"50px\\">
    <SpaceVertical style={{...}} alignItems=\\"center\\" gap=\\"xsmall\\">
      <IconButton icon=\\"Dashboard\\" label=\\"Diagram\\" tooltipPlacement=\\"right\\" size=\\"large\\" toggle={[undefined]} onClick={[Function: showDiagram]} style={{...}} />
      <IconButton icon=\\"GearOutline\\" label=\\"Settings\\" tooltipPlacement=\\"right\\" size=\\"large\\" onClick={[Function: onClick]} toggle={true} style={{...}} />
      <IconButton icon=\\"Tune\\" label=\\"View Options\\" tooltipPlacement=\\"right\\" size=\\"large\\" onClick={[Function: onClick]} toggle={false} style={{...}} />
      <IconButton icon=\\"Help\\" label=\\"Diagram Help\\" tooltipPlacement=\\"right\\" id=\\"diagram-help-btn\\" size=\\"large\\" onClick={[Function: onClick]} toggle={false} style={{...}} />
    </SpaceVertical>
  </Styled(Aside)>
  <DiagramSettings modelDetails={{...}} currentModel={{...}} setModelError={[undefined]} selectedBranch=\\"main\\" setSelectedBranch={[undefined]} branchOpts={{...}} gitBranch={{...}} gitBranches={{...}} exploreList={{...}} selectionInfo={{...}} projectId={[undefined]} currentExplore={[undefined]} diagramExplore=\\"test_explore\\" setSelectionInfo={[Function: bound _dispatchAction]} setViewVisible={[Function: bound _dispatchAction]} setZoomFactor={[Function: bound _dispatchAction]} setViewPosition={[Function: bound _dispatchAction]} setMinimapUntoggled={[Function: bound _dispatchAction]} setMinimapEnabled={[Function: bound _dispatchAction]} />
  <Styled(Section)>
    <DiagramHeader currentExplore={[undefined]} selectionInfo={{...}} toggleExploreInfo={[Function: toggleExploreInfo]} />
    <Layout hasAside={true} height=\\"100%\\" id=\\"DiagramStage\\">
      <DiagramCanvas unfilteredModels={{...}} modelError={[undefined]} pathModelName=\\"test\\" pathExploreName=\\"test_explore\\" currentDimensions={[undefined]} zoomFactor={0.5} reload={false} defaultMinimap={true} minimapUntoggled={true} minimapEnabled={false} setZoomFactor={[Function: bound _dispatchAction]} setViewPosition={[Function: bound _dispatchAction]} setReload={[Function: bound _dispatchAction]} setMinimapUntoggled={[Function: bound _dispatchAction]} setMinimapEnabled={[Function: bound _dispatchAction]} dimensions={[undefined]} explore={[undefined]} selectionInfo={{...}} setSelectionInfo={[Function: bound _dispatchAction]} hiddenToggle={true} displayFieldType=\\"all\\" viewVisible={{...}} viewPosition={{...}} minimapX={0} minimapY={0} minimapScale={1} />
    </Layout>
  </Styled(Section)>
</Layout>"
`;

exports[`<DiagramFrame /> should help section 1`] = `
"<Layout hasAside={true} height=\\"100%\\">
  <Styled(Aside) width=\\"50px\\">
    <SpaceVertical style={{...}} alignItems=\\"center\\" gap=\\"xsmall\\">
      <IconButton icon=\\"Dashboard\\" label=\\"Diagram\\" tooltipPlacement=\\"right\\" size=\\"large\\" toggle={[undefined]} onClick={[Function: showDiagram]} style={{...}} />
      <IconButton icon=\\"GearOutline\\" label=\\"Settings\\" tooltipPlacement=\\"right\\" size=\\"large\\" onClick={[Function: onClick]} toggle={false} style={{...}} />
      <IconButton icon=\\"Tune\\" label=\\"View Options\\" tooltipPlacement=\\"right\\" size=\\"large\\" onClick={[Function: onClick]} toggle={false} style={{...}} />
      <IconButton icon=\\"Help\\" label=\\"Diagram Help\\" tooltipPlacement=\\"right\\" id=\\"diagram-help-btn\\" size=\\"large\\" onClick={[Function: onClick]} toggle={true} style={{...}} />
    </SpaceVertical>
  </Styled(Aside)>
  <HelpPanel />
  <Styled(Section)>
    <DiagramHeader currentExplore={[undefined]} selectionInfo={{...}} toggleExploreInfo={[Function: toggleExploreInfo]} />
    <Layout hasAside={true} height=\\"100%\\" id=\\"DiagramStage\\">
      <DiagramCanvas unfilteredModels={{...}} modelError={[undefined]} pathModelName=\\"test\\" pathExploreName=\\"test_explore\\" currentDimensions={[undefined]} zoomFactor={0.5} reload={false} defaultMinimap={true} minimapUntoggled={true} minimapEnabled={false} setZoomFactor={[Function: bound _dispatchAction]} setViewPosition={[Function: bound _dispatchAction]} setReload={[Function: bound _dispatchAction]} setMinimapUntoggled={[Function: bound _dispatchAction]} setMinimapEnabled={[Function: bound _dispatchAction]} dimensions={[undefined]} explore={[undefined]} selectionInfo={{...}} setSelectionInfo={[Function: bound _dispatchAction]} hiddenToggle={true} displayFieldType=\\"all\\" viewVisible={{...}} viewPosition={{...}} minimapX={0} minimapY={0} minimapScale={1} />
    </Layout>
  </Styled(Section)>
</Layout>"
`;

exports[`<DiagramFrame /> should settings section 1`] = `
"<Layout hasAside={true} height=\\"100%\\">
  <Styled(Aside) width=\\"50px\\">
    <SpaceVertical style={{...}} alignItems=\\"center\\" gap=\\"xsmall\\">
      <IconButton icon=\\"Dashboard\\" label=\\"Diagram\\" tooltipPlacement=\\"right\\" size=\\"large\\" toggle={true} onClick={[Function: showDiagram]} style={{...}} />
      <IconButton icon=\\"GearOutline\\" label=\\"Settings\\" tooltipPlacement=\\"right\\" size=\\"large\\" onClick={[Function: onClick]} toggle={false} style={{...}} />
      <IconButton icon=\\"Tune\\" label=\\"View Options\\" tooltipPlacement=\\"right\\" size=\\"large\\" onClick={[Function: onClick]} toggle={false} style={{...}} />
      <IconButton icon=\\"Help\\" label=\\"Diagram Help\\" tooltipPlacement=\\"right\\" id=\\"diagram-help-btn\\" size=\\"large\\" onClick={[Function: onClick]} toggle={false} style={{...}} />
    </SpaceVertical>
  </Styled(Aside)>
  <Styled(Section)>
    <DiagramHeader currentExplore={[undefined]} selectionInfo={{...}} toggleExploreInfo={[Function: toggleExploreInfo]} />
    <Layout hasAside={true} height=\\"100%\\" id=\\"DiagramStage\\">
      <DiagramCanvas unfilteredModels={{...}} modelError={[undefined]} pathModelName=\\"test\\" pathExploreName=\\"test_explore\\" currentDimensions={[undefined]} zoomFactor={0.5} reload={false} defaultMinimap={true} minimapUntoggled={true} minimapEnabled={false} setZoomFactor={[Function: bound _dispatchAction]} setViewPosition={[Function: bound _dispatchAction]} setReload={[Function: bound _dispatchAction]} setMinimapUntoggled={[Function: bound _dispatchAction]} setMinimapEnabled={[Function: bound _dispatchAction]} dimensions={[undefined]} explore={[undefined]} selectionInfo={{...}} setSelectionInfo={[Function: bound _dispatchAction]} hiddenToggle={true} displayFieldType=\\"all\\" viewVisible={{...}} viewPosition={{...}} minimapX={0} minimapY={0} minimapScale={1} />
    </Layout>
  </Styled(Section)>
</Layout>"
`;
